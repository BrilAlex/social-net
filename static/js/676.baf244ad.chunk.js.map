{"version":3,"file":"static/js/676.baf244ad.chunk.js","mappings":"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","sources":["webpack://social-net-ts-project/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://social-net-ts-project/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.tsx","webpack://social-net-ts-project/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.tsx","webpack://social-net-ts-project/./src/components/Dialogs/SendNewMessageForm/SendNewMessageForm.module.css?56db","components/Dialogs/SendNewMessageForm/SendNewMessageForm.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogsPage\":\"Dialogs_dialogsPage__cKtui\",\"dialogsContainer\":\"Dialogs_dialogsContainer__dLpmo\",\"messagesContainer\":\"Dialogs_messagesContainer__qsXrM\",\"newMessageBlock\":\"Dialogs_newMessageBlock__WX0P8\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__DKSU8\",\"active\":\"DialogItem_active__htRaZ\"};","import React from \"react\";\r\nimport styles from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport manAvatar from \"./../../../assets/images/man_avatar.png\";\r\nimport womanAvatar from \"./../../../assets/images/woman_avatar.png\";\r\n\r\ntype DialogItemPropsType = {\r\n  id: number\r\n  name: string\r\n};\r\n\r\nexport const DialogItem: React.FC<DialogItemPropsType> = (props) => {\r\n  const path = \"/dialogs/\" + props.id;\r\n  const avatarSrc = (props.name === \"Karina\" || props.name === \"Svetlana\") ? womanAvatar : manAvatar;\r\n\r\n  return (\r\n    <div className={styles.dialog}>\r\n      <NavLink to={path} activeClassName={styles.active}>\r\n        <img src={avatarSrc} alt={props.name + \"'s Avatar\"}/>\r\n        <span>{props.name}</span>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__1AaZh\",\"senderInfo\":\"Message_senderInfo__uq6Yp\",\"incoming\":\"Message_incoming__Qzgfm\",\"outgoing\":\"Message_outgoing__zhaFQ\",\"senderName\":\"Message_senderName__gQaC-\",\"messageContent\":\"Message_messageContent__cHqIM\",\"messageTime\":\"Message_messageTime__63Xwt\"};","import React from \"react\";\r\nimport styles from \"./Message.module.css\";\r\nimport manAvatar from \"./../../../assets/images/man_avatar.png\";\r\nimport womanAvatar from \"./../../../assets/images/woman_avatar.png\";\r\n\r\ntype MessagePropsType = {\r\n  name: string\r\n  messageText: string\r\n  messageTime: string\r\n};\r\n\r\nexport const Message: React.FC<MessagePropsType> = (props) => {\r\n  const messageClassName = `${styles.message} ${props.name === \"Me\" ? styles.outgoing : styles.incoming}`;\r\n  const avatarSrc = props.name === \"Me\" ? manAvatar : womanAvatar;\r\n\r\n  return (\r\n    <div className={messageClassName}>\r\n      <div className={styles.senderInfo}>\r\n        <img className={styles.senderAvatar} src={avatarSrc} alt={props.name + \" avatar\"}/>\r\n        <p className={styles.senderName}>{props.name}</p>\r\n      </div>\r\n      <div className={styles.messageContent}>\r\n        <p className={styles.messageText}>{props.messageText}</p>\r\n        <span className={styles.messageTime}>{props.messageTime}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"submitButton\":\"SendNewMessageForm_submitButton__KVjqw\"};","import React, {FC} from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport styles from \"./SendNewMessageForm.module.css\";\r\n\r\nexport type SendNewMessageFormDataType = {\r\n  newMessageText: string\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst SendNewMessageForm: FC<InjectedFormProps<SendNewMessageFormDataType>> = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        name={\"newMessageText\"}\r\n        component={Textarea}\r\n        placeholder={\"Enter your message\"}\r\n        validate={[required, maxLength50]}\r\n      />\r\n      <button className={styles.submitButton}>Send message</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm<SendNewMessageFormDataType>({form: \"sendNewMessageForm\"})(SendNewMessageForm);\r\n","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/reduxStore\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStateToPropsType = {\r\n  isAuth: boolean\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n};\r\n\r\nexport function withAuthRedirect<WCP>(Component: ComponentType<WCP>) {\r\n  class AuthRedirectComponent extends React.Component<MapStateToPropsType> {\r\n    render() {\r\n      const {isAuth, ...restProps} = this.props;\r\n\r\n      if (!isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n      return <Component {...restProps as WCP}/>\r\n    };\r\n  }\r\n\r\n  const ConnectedAuthRedirectComponent = connect(mapStateToProps)(AuthRedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}","import {Dialogs} from \"./Dialogs\";\r\nimport {DialogsInitStateType, sendNewMessageAC} from \"../../redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootActionsType, AppStateType} from \"../../redux/reduxStore\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {ComponentType} from \"react\";\r\n\r\ntype MapStateToPropsType = DialogsInitStateType;\r\n\r\ntype MapDispatchToPropsType = {\r\n  sendNewMessage: (newMessageText: string) => void\r\n};\r\n\r\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType;\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: (action: RootActionsType) => void): MapDispatchToPropsType => {\r\n  return {\r\n    sendNewMessage: (newMessageText: string) => {\r\n      dispatch(sendNewMessageAC(newMessageText));\r\n    },\r\n  };\r\n};\r\n\r\nconst DialogsContainer = compose<ComponentType>(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport SendNewMessageForm, {SendNewMessageFormDataType} from \"./SendNewMessageForm/SendNewMessageForm\";\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n  const dialogsElements = props.dialogs.map(d =>\r\n    <DialogItem key={d.id} id={d.id} name={d.name}/>\r\n  );\r\n\r\n  const messagesElements = props.messages.map(m =>\r\n    <Message\r\n      key={m.id}\r\n      name={m.sender}\r\n      messageText={m.messageText}\r\n      messageTime={m.messageTime}\r\n    />\r\n  );\r\n\r\n  const sendNewMessage = (formData: SendNewMessageFormDataType) => {\r\n    props.sendNewMessage(formData.newMessageText);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.dialogsPage}>\r\n      <div className={styles.dialogsContainer}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={styles.messagesContainer}>\r\n        <div>{messagesElements}</div>\r\n        <div className={styles.newMessageBlock}>\r\n          <SendNewMessageForm onSubmit={sendNewMessage}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":["DialogItem","props","path","id","avatarSrc","name","womanAvatar","manAvatar","className","styles","to","activeClassName","src","alt","Message","messageClassName","messageText","messageTime","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","mapStateToProps","state","isAuth","auth","DialogsContainer","compose","Component","AuthRedirectComponent","this","restProps","React","connect","dialogs","dialogsPage","messages","dispatch","sendNewMessage","newMessageText","sendNewMessageAC","dialogsElements","map","d","messagesElements","m","sender","formData"],"sourceRoot":""}